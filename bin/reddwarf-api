#!/usr/bin/env python
# pylint: disable-msg=C0103
# vim: tabstop=4 shiftwidth=4 softtabstop=4

# Copyright (c) 2011 OpenStack, LLC.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

"""Starter script for Platform API."""

import os
import signal
import sys

possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, "nova", "__init__.py")):
    sys.path.insert(0, possible_topdir)

import nova.service
import nova.utils

from nova import flags
from nova import log as logging
from nova import service
from nova import utils
from nova import version
from nova import wsgi
from reddwarf.rpc import message_handler


LOG = logging.getLogger('reddwarf.api')
LOG.setLevel(logging.DEBUG)

FLAGS = flags.FLAGS

flags.DEFINE_string('platformapi_extensions_path',
                    '/var/lib/platform/extensions',
                    'default directory for platform extensions')
flags.DEFINE_integer('platformapi_max_limit', 1000,
                     'max number of items returned in a collection response')
flags.DEFINE_string('dbaasapi_listen', "0.0.0.0",
                    'IP address for DBaaS API to listen')
flags.DEFINE_integer('dbaasapi_listen_port', 8775,
                     'Port for DBaaS API to listen')
flags.DEFINE_string('reddwarf_api_paste_config', "reddwarf-api-paste.ini",
                    'File name for the paste.deploy config for platform-api')

nova.utils.default_flagfile()
FLAGS(sys.argv)
logging.setup()
LOG.audit(_("Starting reddwarf-api node (version %s)"),
          version.version_string_with_vcs())
LOG.debug(_("Full set of FLAGS:"))

for flag in FLAGS:
    flag_get = FLAGS.get(flag, None)
    LOG.debug("%(flag)s : %(flag_get)s" % locals())

if __name__ == '__main__':
    utils.default_flagfile()
    flags.FLAGS(sys.argv)
    logging.setup()
    utils.monkey_patch()
    servers = []

    # API service
    loader = wsgi.Loader(config_path=FLAGS.reddwarf_api_paste_config)
    servers.append(service.WSGIService("dbaasapi", loader=loader))

    # Phone home messaging service
    handler = message_handler.MessageHandlerService()
    servers.append(handler)

    service.serve(*servers)
    service.wait()
